---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: onionservices.tor.stack.io
spec:
  group: tor.stack.io
  names:
    kind: OnionService
    listKind: OnionServiceList
    plural: onionservices
    singular: onionservice
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.onionAddress
      name: Onion Address
      type: string
    - jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              hiddenServiceDir:
                type: string
              hiddenServicePort:
                type: integer
              hiddenServiceTarget:
                type: string
              socksPolicy:
                description: |-
                  Entry policies to allow/deny SOCKS requests based on IP address.
                  First entry that matches wins. If no SOCKSPolicy is set, we accept
                  all (and only) requests that reach a SOCKSPort. Untrusted users who
                  can access your SOCKSPort may be able to learn about the connections
                  you make.
                  SOCKSPolicy accept 192.168.0.0/16
                  SOCKSPolicy accept6 FC00::/7
                  SOCKSPolicy reject *
                items:
                  type: string
                type: array
              socksPort:
                type: integer
            required:
            - hiddenServicePort
            - socksPort
            type: object
          status:
            properties:
              message:
                type: string
              onionAddress:
                type: string
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
